
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user document.
      // Users can create their own document.
      // Users can update their own document.
      // Any signed-in user can read public user profiles.
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin(); // Only admins can delete users
    }
    
    // Battles Collection
    match /battles/{battleId} {
      // Any signed-in user can read battles (to see open/ongoing games).
      allow read: if isSignedIn();
      // Only signed-in users can create battles.
      allow create: if isSignedIn();
      // Only a player in the battle or an admin can update it.
      allow update: if (isSignedIn() && (request.resource.data.creator.id == request.auth.uid || request.resource.data.opponent.id == request.auth.uid)) || isAdmin();
      // Only admins can delete battles for cleanup.
      allow delete: if isAdmin();
    }
    
    // Transactions Collection
    match /transactions/{transactionId} {
       // Users can only create and read their own transactions.
      allow create, read: if isOwner(resource.data.userId);
      // Admins can read, update and delete any transaction.
      allow read, update, delete: if isAdmin();
    }
    
    // Referrals Collection
    match /referrals/{referralId} {
      // Logged in users can create referrals (when they sign up with a code)
      allow create: if isSignedIn();
      // Only admins should be able to read all referral data for analytics
      // Users don't need to read this directly
      allow read, update, delete: if isAdmin();
    }

    // Config collections (appSettings, landingPage, socialMedia) should be admin-only
    match /config/{docId} {
      // Any user can read the settings (e.g., for header banner text)
      allow read: if true;
      // Only admins can change the settings
      allow write: if isAdmin();
    }
    
    // Agents collection should be admin-only
    match /agents/{agentId} {
        allow read, write, create, delete: if isAdmin();
    }
    
    // Payment UPIs collection should be admin-only
    match /payment_upis/{upiId} {
         allow read, write, create, delete: if isAdmin();
    }
  }
}
