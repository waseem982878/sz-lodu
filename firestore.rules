rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read and write their own data
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid != null;
    }

    // Allow logged-in users to read/write battles, but only admin can delete
    match /battles/{battleId} {
        allow read, create, update: if request.auth.uid != null;
        allow delete: if isAdmin();
    }

    // Allow logged-in users to read/write transactions, but only admin can delete
    match /transactions/{transactionId} {
        allow read, create, update: if request.auth.uid != null;
        allow delete: if isAdmin();
    }

    // Allow logged-in users to read/write orders, but only admin can delete
    match /orders/{orderId} {
        allow read, create, update: if request.auth.uid != null;
        allow delete: if isAdmin();
    }

    // Only admins can manage UPI payment methods
    match /upiPayments/{paymentId} {
        allow read: if request.auth.uid != null; // Users can read available methods
        allow create, update, delete: if isAdmin();
    }
  }
}
