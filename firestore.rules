rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin privileges
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read their own user document
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
    }

    // UPI accounts - admin only
    match /payment_upis/{document} {
      allow read, write: if isAdmin();
    }

    // Payment requests
    // - Users can create for themselves
    // - Users can read their own
    // - Admins can read/write all
    match /payment_requests/{paymentId} {
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }

    // Orders
    // - Users can create for themselves
    // - Users can read their own
    // - Admins can read/write all
    match /orders/{orderId} {
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Only allow users to update if the order is still pending
      allow update: if (request.auth != null && request.resource.data.userId == request.auth.uid && resource.data.status == 'pending') || isAdmin();
      allow delete: if isAdmin();
    }
  }
}
