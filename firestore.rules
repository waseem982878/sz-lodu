rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read anyone's profile, but only create/update their own.
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Battles: Logged-in users can read/create/update battles.
    match /battles/{battleId} {
      allow read, create: if request.auth != null;
      // Only participants or an admin can update.
      allow update: if request.auth != null && (request.auth.uid == resource.data.creator.id || request.auth.uid == resource.data.opponent.id || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // Transactions: Users can only read/create their own transactions. Admins can update.
    match /transactions/{transactionId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAgent == true;
    }

    // Config: Admins can read/write app config. Logged-in users can read.
    match /config/{configId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Referrals: Logged-in users can create. Can be updated by the system (via admin/backend).
    match /referrals/{referralId} {
        allow read, create: if request.auth != null;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Payment UPIs: Only accessible by admins.
    match /payment_upis/{upiId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAgent == true;
    }
    
    // Agents: Only accessible by admins.
    match /agents/{agentId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
