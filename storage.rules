
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Assumes you have a custom claim 'admin' set to true for admin users
      return request.auth.token.admin == true;
    }

    // KYC Documents: User can write, admin can read/write
    match /kyc/{userId}/{allPaths=**} {
      allow read, write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Deposit Screenshots: User can write, admin can read/write
    match /deposits/{userId}/{allPaths=**} {
       allow read, write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Result Screenshots: User can write, admin can read/write
    match /results/{battleId}/{userId}/{allPaths=**} {
       allow read, write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }
    
    // Avatars: Any authenticated user can write to their own path
    match /avatars/{userId}/{allPaths=**} {
        allow write: if isAuthenticated() && request.auth.uid == userId;
        allow read; // Publicly readable
    }
  }
}
