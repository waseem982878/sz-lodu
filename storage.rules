rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Ensure you have set this custom claim on your admin users' accounts
      return request.auth.token.admin == true;
    }

    // KYC Documents: User can write, user and admin can read.
    match /kyc/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Deposit Screenshots: User can write, only admin can read.
    match /deposits/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && isAdmin();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Result Screenshots: User can write, only admin can read.
    match /results/{battleId}/{userId}/{allPaths=**} {
        allow read: if isAuthenticated() && isAdmin();
        allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // User Avatars: Publicly readable, only user can write.
    match /avatars/{userId} {
        allow read;
        allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
